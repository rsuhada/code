#+TITLE: Esaspi Devel Log
#+AUTHOR: Robert Suhada
#+STARTUP: showstars
#+STARTUP: contetnt
#+OPTIONS: \n:t
#+OPTIONS: ^:nil
#+OPTIONS: *:nil


* agenda

** TODO [#A] refactor make_2d_beta and make_2d_king to be without loop by passing distmatrix

** DONE [#A] actually run fitter on 2e5 beta to confirm that it works
  CLOSED: [2012-09-17 Mon 19:30]

Sucessful: [[result_lmfitter_beta.png]]

parameter: true | fit
rcore 10.0 10.6277787014 +/- 0.115453837186
beta 0.666666666667 0.692480574855 +/- 0.00708285330472

fitting took roughly:  740.88284  s on (900, 900) image


** DONE [#A] actually run fitter on 2e3 beta x psf to confirm that it works
   CLOSED: [2012-09-18 Tue 08:25]

   Sucessful: [[result_lmfitter_beta_psf.png]]

   fitting took:  979.982657  s

   parameter: true | fit
   rcore 10.0 10.4510325964 +/- 0.422839552458
   beta 0.666666666667 0.676426452245 +/- 0.0183221247242


** DONE need to look at speedup possibility via matrix ops
   CLOSED: [2012-10-10 Wed 11:33]

** TODO [#B] need to thik about image size handling (can lead to speed up,
   including if I can assume exact center of cluster)


** TODO [#B] check extractor speedup possibilities - the obvoius one with passing

** TODO [#A] add vikhlini model

** TODO [#A] add vikhlini model fitter

** TODO [#A] start real data integration

* Mon Sep 17 18:29:03 2012

Confirmed that the bottleneck is at the moment the moment the
extract_generic routine (about 5s for 900x900)

* Tue Sep 18 08:25:09 2012
run some further test, fitter seems to work but rather slowly

* Mon Sep 24 09:58:36 2012

* Tue Sep 25 12:32:56 2012

Problem occurred: what to do if observation is split into 2 obsids
(i.e. not one obsid into more eventlists)

Current solution:

ln -s 0674491401 SPT-CL-J2018-6259a
ln -s 0674491501 SPT-CL-J2018-6259a

* Tue Oct  9 14:22:50 2012
** speeding up

- refactored to pass distmatrix to the extractor
- moving code to use bincount for extraction

* Wed Oct 10 13:39:32 2012
** speed-up
- bincount extraction implemented in extract_profile_fast

- profile extracted classically in good agreement though since
  bincount requires int in distance (i.e. pixels) there are
  differences in which pixels are atributed to which bin. This is
  still OK

- even though running it outside minimize shows factor 3 speedup ~2.3s
  per iteration, limited by fftconvolve, i.e. the ultimate bottle neck
  (I could speed up the beta and king calculation too)

- running it inside minime gives ~6.4s per iteration i.e. barely any
  speedup! claim is it happens during beta model calculation (not
  certain due to the naive timing but the extraction time *is* sped up
  with the bincount solution as expected)

- in addition the testrun took very long and didn't converge
  properly - possibly problem with the array formating etc.

- recommendation - revert to the original working version...

* Thu Oct 11 12:24:00 2012
** speed-up
- improved make_2d_beta and make_2d_king by removing one operation
  from the loop

- checked a comprehension solution but didn't finish

- testing code is in the untracked scratch subdir

* Fri Oct 12 11:58:54 2012
** speedup - test result

*** fit for 2e5 cts

- running:

test_create_beta_psf_im(imname)
test_lmfit_beta_psf_1d(imname)

fitting took:  3.282843  s

|-------+-----------+-----------+---------|
| name  |      true |       fit |   error |
|-------+-----------+-----------+---------|
| norm  |   1.00000 | 288.98153 | 4.39254 |
| rcore |  10.00000 |   9.76340 | 0.26461 |
| beta  |   0.66667 |   0.64858 | 0.00918 |
| xcen  | 450.00000 |  50.00000 | 0.00000 |
| ycen  | 450.00000 |  50.00000 | 0.00000 |
|-------+-----------+-----------+---------|


[[/Users/rs/data1/sw/esaspi/py/test/test_results/betaxpst_fit_2e5.png][plot]]

- looks excellent and speedup is immense (from 700-900s to 3s)

- this is only partly because of the model improvements - the main
  part being the propor implementation of the cut-out procedure

** commit

- important commit: fitting *works*

- errors are provisional, I'm going to improve them now

- running this for 2e5 and any parameter input shows that the
  fitter/extractor is *correct* and *fast*

- create and fit functions:

test_create_beta_psf_im(imname)
test_lmfit_beta_psf_1d(imname)


- commit ID:
   commit 5ec79ee8c4ee277f4eac29a56fbe084c68d7c5cc
   1 parent e8fd34b25a


** test files
expmap   = "pn-test-exp.fits"
bgmap    = "pn-test-bg-2cp.fits"
maskmap  = "pn-test-mask.fits"
outfile  = "cluster-im.fits"

files are from:
/Users/rs/w/xspt/data/SPT-CL-J0205-5829/analysis

pnS003-500-2000-oot.im
pnS003-500-2000-oot.im.orig
pnS003-500-2000-woot.im
pnS003-500-2000.bg
pnS003-500-2000.cheese
pnS003-500-2000.exp
pnS003-500-2000.im
pnS003-500-2000.im-det-m1.reg
pnS003-500-2000.im-det-m2.reg
pnS003-500-2000.im-det-pn.reg
pnS003-500-2000.mask
pnS003-500-2000.mask.wps
pnS003-500-2000.spl.bg
pnS003-500-2000.spl.cheese
pnS003-500-2000.uv.exp

