######################################################################
# TODO

General:

- in quick-spec/iter-spec ps removal might be improved if you look at
  the images in the full band (acutally in pn there can be very bright
  hot pixels but it seems they are all belove 0.4keV and don't affect
  results atm)

- check pn-spectra for oot removal (INT format + negaitive bins?)

- from pn-spectra extract part that adds the proper ps regions to
  images like *-obj-im-500-2000.fits (ideally automatize extraction
  and coordinate conversion for the reg) - now EXTRACT_SPEC_ESAS_ has
  to be run which takes too much time if the esas background part is
  not yet used

- in 0205 the pn-man-mask.fits.cheese are merged all 3 (same for m1
  and m2) - rahter than individual... why?

- top level dir handling should be changed - now requires an OBSID dir
  (or link) so having 2 reductions is cumbersome!
- imaging pipeline

- find out what causes the eveselct change - go through the parameters

- centralize cosmology (see py and xspec part)

- dedicated source detection module

- would be nice to cleanup the namespace (sometime variables are
  duplicated) and the capitalization convention should be better

Imaging:
- oot subtraction!
- distmatrix needs to pass only shape not full im

Iterator:
- OOT!!!
- core PSF spillover?
- how to stop before running into low s/n?
- use andersson optimized band for spectroscopy
- what about the python deprecation warning

Profiles:

Snowden:
- do the actual fitting
- annulus support for converter
- finalize/test proton
- finalize/test combine-smooth.sh

######################################################################
# dependencies

SAS v. >=11.0.0
ftools

python:
- scipy, numpy, pyfits, matplolib

quick-spec:
- requires vikhlinins calculator # FIXME: refactor to remove this dependency

iter-spec:
- requires cosmo_dist.py in the python path
- requires vikhlinins calculator # FIXME: refactor to remove this dependency

sb fitter:
- requires minuit as the fitting package

######################################################################
# running on a dir

1. download tar from XSA
2. untar 1 time: should be OBSID/odf/xxxxxx.tar.gz
3. have a .conf and .modules file in configs/ (e.g. copy templates):

cp ~/data1/sw/esaspi/templates/template.conf configs/SPT-XXXXX.conf
cp ~/data1/sw/esaspi/templates/template.modules configs/SPT-XXXXX.modules

- edit them by setting the config options and pick the first module

update:
get-templates.sh 060401099

- standalone script to do the prep work

4. there should be a notes/ dir for analysis notes
5. there has to be a soft link OBSID -> your analysis dir
6. initialize heasoft, sas11
7. run

dir=test0205 ; run-esas.sh configs/${dir}.conf configs/${dir}.modules 2>&1 | tee log-${dir}-TESTING-prefixes.log

NOTES:
3. -> path can be set from running run-esas.sh

3. + 4. -> or change the setups in run-esas.sh

5. -> should be changed to allow multiple reductions per OBSID

######################################################################
# file naming etc.

possible prefixes are:

[pn,mos1,mos2][U,S]???

- prefix list is now automatically added to analysis notes files (and
  should be copied to the .conf file) in the RUN_FILTERS module

analysis:
pnS003-ori.fits    - raw event list
pnS003-clean.fits  - cleaned event list

abbreviations:

bg - background
gc - growth curve = cumulative profile
oot - out of time events
ps - point source(s)
uv - unvignetted
woot - *with* oot (i.e. pre-subtraction)

######################################################################
# create region - manual solution - CLOSED

cd 0097820101/analysis
xmmselect table=pnS005-clean.fits &

select DETX DETY
click image
click run
create region
click 2D region
copy to pn-reg.txt
prepend &&
e.g.:

&&((DETX,DETY) IN circle(69.7556,-86.7555,600))


######################################################################
# solution for region files - CLOSED (add annulus support)

- look into /code/convert-reg-wcs-to-det.sh

- standard regions (circular) can be created in ds9 in wcs and
automatically converted with: /code/convert-reg-wcs-to-det.sh


- manual handling:

cd 0097820101/analysis

make wcs region file:

# Region file format: DS9 version 4.1
# Filename: pnS005-obj-im.fits
global color=green dashlist=8 3 width=1 font="helvetica 10 normal" select=1 highlite=1 dash=0 fixed=0 edit=1 move=1 delete=1 include=1 source=1
fk5
circle(207.22025,26.590618,30")

ecoordconv imageset=pnS005-obj-im.fits   x=207.22025 y=26.590618 coordtype=EQPOS
ecoordconv imageset=mos1S003-obj-im.fits x=207.22025 y=26.590618 coordtype=EQPOS
ecoordconv imageset=mos2S004-obj-im.fits x=207.22025 y=26.590618 coordtype=EQPOS

~/data1/sbox/esas/0097820101/analysis> ecoordconv imageset=pnS005-obj-im.fits   x=207.22025 y=26.590618 coordtype=EQPOS
ecoordconv:- Executing (routine): ecoordconv imageset=pnS005-obj-im.fits srcexp='' x=207.22025 y=26.590618 coordtype=EQPOS withcoords=yes  -V 4
ecoordconv:- ecoordconv (especget-1.31.2)  [xmmsas_20110223_1801-11.0.0] started:  2011-09-05T16:09:16.000
ecoordconv:-  Region Centre:
 Theta: Phi: 65.8815 3.53639
 X: Y: 26421 27821
 DETX: DETY: 67.2793 -123.994
 RA: DEC: 207.22 26.5906
 RAWX: RAWY: 38 189
 CCD(s):  4 centred on CCD: 4

ecoordconv:- ecoordconv (especget-1.31.2)  [xmmsas_20110223_1801-11.0.0] ended:    2011-09-05T16:09:17.000
[4]+  Done                    ds9 mos2S004-im-det.fits pnS005-im-det.fits
~/data1/sbox/esas/0097820101/analysis> ecoordconv imageset=mos1S003-obj-im.fits x=207.22025 y=26.590618 coordtype=EQPOS
ecoordconv:- Executing (routine): ecoordconv imageset=mos1S003-obj-im.fits srcexp='' x=207.22025 y=26.590618 coordtype=EQPOS withcoords=yes  -V 4
ecoordconv:- ecoordconv (especget-1.31.2)  [xmmsas_20110223_1801-11.0.0] started:  2011-09-05T16:09:35.000
ecoordconv:-  Region Centre:
 Theta: Phi: 5.59933 4.38992
 X: Y: 26421 27821
 DETX: DETY: 205.322 -244.603
 RA: DEC: 207.22 26.5906
 RAWX: RAWY: 310 289
 CCD(s):  1 centred on CCD: 1

ecoordconv:- ecoordconv (especget-1.31.2)  [xmmsas_20110223_1801-11.0.0] ended:    2011-09-05T16:09:35.000
~/data1/sbox/esas/0097820101/analysis> ecoordconv imageset=mos2S004-obj-im.fits x=207.22025 y=26.590618 coordtype=EQPOS
ecoordconv:- Executing (routine): ecoordconv imageset=mos2S004-obj-im.fits srcexp='' x=207.22025 y=26.590618 coordtype=EQPOS withcoords=yes  -V 4
ecoordconv:- ecoordconv (especget-1.31.2)  [xmmsas_20110223_1801-11.0.0] started:  2011-09-05T16:09:45.000
ecoordconv:-  Region Centre:
 Theta: Phi: 66.8417 5.07716
 X: Y: 26421 27821
 DETX: DETY: 62.5219 -16.9727
 RA: DEC: 207.22 26.5906
 RAWX: RAWY: 303 300
 CCD(s):  1 centred on CCD: 1

- dmmakereg in ciao might be relevant

######################################################################
# point source removal - CLOSED

# FIXME: adding more elegant solution at the remask step

ds9 *cheese*

compare this to image - if removal is insufficient:

fcat2reg.sh emllist.fits 10.0 ML_ID_SRC

fv emllist.fits &

find the ML_ID_SOURCE you want to remove and edit it DIST_NN so that
it is > 40 (possibly but unlikely also edit other columns so that it
makes the cut of the region task, see below) columns to change:

# Mon Jan  2 15:35:54 2012: the default is now 20", it's set in cheese

DET_ML
FLUX
DIST_NN

cuts depending on what is in remask.sh

- save the change in the fits file
- run the remask.sh task
- check everything again

Further trick:

ds9 *cheese* &

create contours, 2 levels 0/1, lowest smoothness and save this way
you'll see which of the all emldetect sources get actually masked out

this is how cheese calls region/make mask it:

region eventset=pnS005-clean.fits operationstyle=global srclisttab=emllist.fits:SRCLIST expression='(DIST_NN >= 40.0)&&(FLUX >= 1e-14)&&(ID_INST == 0)&&(ID_BAND == 0)&&(DET_ML >= 15)' bkgregionset=pnS005-bkg_region-det.fits energyfraction=0.5 radiusstyle=enfrac outunit=detxy verbosity=1

region eventset=pnS005-clean.fits operationstyle=global srclisttab=emllist.fits:SRCLIST expression='(DIST_NN >= 40.0)&&(FLUX >= 1e-14)&&(ID_INST == 0)&&(ID_BAND == 0)&&(DET_ML >= 15)' bkgregionset=pnS005-bkg_region-sky.fits radiusstyle=contour bkgratestyle=col nosrcellipse=yes bkgfraction=0.5 outunit=xy verbosity=1

make_mask inimage=pnS005-obj-im.fits inmask=pnS005-mask-im.fits outmask=pnS005-cheese.fits reglist=pnS005-bkg_region-sky.fits


- region is undocumented
- region has a expression - can take emldetect output and post-select
-> this will be clearly useful later

- note the radiusstyle differes, is this significant or bug?


######################################################################
# rass background spectrum - CLOSED

go here:
http://heasarc.gsfc.nasa.gov/cgi-bin/Tools/xraybg/xraybg.pl

1. put in source coords
2. region annulus: inner 1 deg, outer 2 deg
3. save spectrum as rass.pi and response as pspcc.rsp in analysis/

######################################################################
# images

ESAS part:

for *obj-im*  900x900
for *obj-det* 780x780

RS part:
900x900

DCP pipe:
648x648
1pix=4"
1"=20phypix

e.g. in iter-spec:

export r=$r_init
export r_phy=$(echo "scale=6;$r*20.0" | bc)

-> these are sky coordinates so the conversion is independent of
   binning

pprof pipe:
648x648

kapi:
?x? - unlisted, seems no way to get it (no headers, maybe paper?)


######################################################################
# quick spectroscopy

1. run esaspi in a standard manner, until the end

2. open e.g. pnS003-obj-im-400-1250.fits
(for background annulus mos is better to contain it in a single chip)

3. adjust regions to needs, define core and bgann - keep the ps
regions roughly confined to the spectroscopic regions - in order not
to have too many regions which conflicts with SAS tasks (still so with
SASv11?). For ps you can load in the *bkg_region.fits to ds9. The
exclusion red bar can be (un-)set in the "properties" menu (select all
first)

4. save the regions in wcs and phys, standard naming:
SRC_REGION=cluster-man-01.phy.reg
BG_REGION=bg-ann-01.phy.reg
PS_REGION=ps-man.phy.reg

5. manually adjust quick-spec-locbg.sh if needed

6. run quick-spec-locbg.sh via run-esaspi.sh (set it in the modules)

7. fitting:

7.1 cd to spec dir
7.2 check conf/*.conf file

7.3 make sure you don't have a DYLD_LIBRARY_PATH conflict, if it is
overtaken by SAS, run:

export DYLD_LIBRARY_PATH=/Users/rs/data1/sw/heasoft-6.11/i386-apple-darwin10.7.0/lib

7.3 run



######################################################################
# analysis-template.txt

- the filename can be set in run-esas.sh
- some scripts can use it to load in parameters automatically
- for a given parameter the *first upper case* instance is read in
  automatically
- i.e. alternative parameters are supported, and this is the mechanism
  to load them in

######################################################################
# xspec sas11 conflict

xspec opened in a shell with sourced SAS will quickly crash with bus
error.

Reason likely is library conflict:

original heainit (xspec works):

DYLD_LIBRARY_PATH=/Users/rs/data1/sw/heasoft-6.11/i386-apple-darwin10.7.0/lib

after sourcing sas11 (xspec crashes):

DYLD_LIBRARY_PATH=/Users/rs/data1/sw/sas-11.0.0/xmmsas_20110223_1803/libsys:/Users/rs/data1/sw/sas-11.0.0/xmmsas_20110223_1803/libextra:/Users/rs/data1/sw/sas-11.0.0/xmmsas_20110223_1803/lib:/Users/rs/data1/sw/heasoft-6.11/i386-apple-darwin10.7.0/lib

fix it:
before running xspec reset to:

export DYLD_LIBRARY_PATH=/Users/rs/data1/sw/heasoft-6.11/i386-apple-darwin10.7.0/lib

######################################################################
# timing
# times are for ~40-60 ks observations

export EXTRACT_SPEC_ESAS_PN=0
export EXTRACT_SPEC_ESAS_M1=0                   # !!!! not tested yet
export EXTRACT_SPEC_ESAS_M2=0                   # !!!! not tested yet
export EXTRACT_BACK_ESAS_PN=0                   # !!!! not tested yet
export EXTRACT_BACK_ESAS_M1=0                   # !!!! not tested yet
export EXTRACT_BACK_ESAS_M2=0                   # !!!! not tested yet
export GROUP_SPEC=0                             # FIXME - prefixes the
# EXTRACT_* block takes about 5-6 hours - if ran on FoV: quite
# demanding - run only during night and close unecessary windows (can
# lead to kernel panic if overload)

export QUICK_SPEC_LOCBG=1
# roughly 20 mins if extracting both source and background, arf, rmf
# and backscale

export PREP_ODF_DIR=0           # ~ 1min
export MAKE_CCF_ODF=0           # ~ 1min
export RUN_EV_CHAINS=0          # ~ 8min
export RUN_FILTERS=0            # ~ 1min
export CHEESE_1B=0              # ~ 2min
export CHEESE_2B=0                              # !!!! not tested yet
export REMASK=0
export REMASK_MANUAL_MASK=0
export DO_EVIGWEIGHT=1          # ~ >1min
export CORRECT_PROTON=0            # !!!! not finished/tested yet
export COMBINE_SMOOTH=0            # !!!! not finished/tested yet
export RENAME_SPEC_PRODUCTS=0      # should be used after CORRECT_PROTON and COMBINE_SMOOTH
export PIPE_TEST=0
export PLT_LC_HIST=0
export PLT_DIAGNOSTICS=0
export RELINK_SPEC_PRODUCTS=0
export MAKE_QUICK_VIEW_IMS=0

for iterative spectroscopy:

- 1 iteration including arf/rmf calculation is ~10 mins (for small
  apertures <~100")

- convergence typically in <5 iterations (hard limit 10 at the moment)

# distmatrix calc:
3.390972
3.318338
3.4243
3.297625

######################################################################
# libraries with internal settings/options variables
# i.e. stuff that can/should be tweaked locally manually  in the file

remask.sh - can change options whether or not add manually selected ps

quick-spec-locbg.sh
iter-spec/iter-spec-driver.sh
py/t_to_r.py

/imaging/make-model-bg-spline.sh
USE_OOT=0                       # use the oot correction for pn? using
                                # it causes some small (maybe
                                # negligible) artefacts

######################################################################
# currently deprecated scripts (debris, early draft no used

# anymore/not useful at the moment)

quick-spec/setrsp.sh
see also ../aux-esaspi/ (not under git)

######################################################################
# arf/rmf

my old rmf/arf parameter setup vs. the esas setup gives agreement to
better than 0.5%

so I currently use the badpixel location, psf weighted rmf and arf
calculated with a detmap - likely you cand do better then this though
the difference is totally negligible

FIXME: add this arf/rmf setup also to iter-spec

######################################################################
# standalone/external scripts
# i.e. small utility scripts that can be run outside run-esaspi.sh

utils/get-coords-from-reg.sh

- extracts coordinates for analysis script
- INPUT: region ID (bar wcs id and suffix, standard naming)

utils/parse-spec-reg.sh

- converts a region to .desc file: a SAS compliant selection
  expression
- INPUT:
  1. ds9 region file
  2. 0/1 - remove/keep these regions? i.e. put &&! or &&

######################################################################
# devel notes

0. random

- dmfilth for refiling ps/gaps

- oot subbed spectra give slightly (tiny) difference in arf but rmf is
  exactly same (spec results are unaffected by this)


1. SB analyisis

- 1D vs 2D fitting

- binning - 3sigma + logarithmic min? or better not at all

- arnaud02 vs mohr99
- further: pratt & arnaud02 (2d fit), pratt & arnaud05
- final refinement croston05

- XMM-LSS:
- alshino10
- claim arnaud02, not clear
- get a test case from here?

arnaud02
- RX J1120.1+4318 - another test case (start here)

other references - helpful:

- lorenzo - no
- yu-ying thesis - no
- desiree - no
- karl - ??
- SAS ??
- snowden no
- sanders ??
- maughan vids - ??

2D:

- needs to extract sub-image for speed -> maybe not: fftconvolve is
  significantly faster then convolve

2. background

- in imaging pipe need to improve the masking for 2comp/spline: too much exclusion?
- also the chipgaps are too larger - check snowden parameters on it - they are the same
- other methods: arnaud, xmm-LSS, yu-ying, snowden, karl


